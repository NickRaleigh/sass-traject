@mixin parseModifiers($childrenObj, $breakPoint, $modifiers) {

  @each $modifier in $modifiers {

    $parsedModifierName: str-replace($modifier, $search:'(', $replace: ' ');
    $parsedModifierName: str-replace($parsedModifierName, $search:':', $replace: ' ');
    $parsedModifierName: str-split($parsedModifierName, ' ');
    $parsedModifierName: unquote(nth($parsedModifierName, 1));
    $selector: false;

    $parsedTarget: false;
    @each $name, $char in $modifier {
      @if ((str-index($name, ':') and ($parsedModifierName == _hide or $parsedModifierName == _show))) {
        $parsedTarget: str-split($modifier, ':');
        $parsedTarget: unquote(nth($parsedTarget, 2));
      }
    }

    $parsedModifier: null;
    @if ($parsedModifierName != _hide and $parsedModifierName != _show) {
      $parsedModifier: unquote(nth(
        str-split($modifier, ': ')
      , 2));
    }

    @if ($parsedTarget) {
      $selector: map-get($childrenObj, $parsedTarget);
    }

    // hide
    @if ($parsedModifierName == _hide) {
      @if ($breakPoint == 'default') {
        #{$selector} {
          display: none;
        }
      } @else {
        @include media('screen', '#{$breakPoint}') {
          #{$selector} {
            display: none;
          }
        }
      }
    }

    // show
    @if ($parsedModifierName == _show) {
      @if ($breakPoint == 'default') {
        #{$selector} {
          display: block;
          display: initial;

        }
      } @else {
          @include media('screen', '#{$breakPoint}') {
          #{$selector} {
            display: block;
            display: initial;
          }
        }
      }
    }

    // grid template rows
    @if ($parsedModifierName == _templateRows or $parsedModifierName == _tr or $parsedModifierName == _trows) {
      @if ($breakPoint == 'default') {
        grid-template-rows: $parsedModifier;
        -ms-grid-rows: $parsedModifier !important;
      } @else {
          @include media('screen', '#{$breakPoint}') {
            grid-template-rows: $parsedModifier;
            -ms-grid-rows: $parsedModifier !important;
        }
      }
    }

    // grid template columns
    @if ($parsedModifierName == _templateColumns or $parsedModifierName == _tc or $parsedModifierName == _tcolumns) {
      @if ($breakPoint == 'default') {
        grid-template-columns: $parsedModifier;
        -ms-grid-columns: $parsedModifier !important;
      } @else {
          @include media('screen', '#{$breakPoint}') {
            grid-template-columns: $parsedModifier;
            -ms-grid-columns: $parsedModifier !important;
        }
      }
    }
  }
}
